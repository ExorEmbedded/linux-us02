/*
 * Copyright Exor International 2018. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/dts-v1/;
/* First 4KB has trampoline code for secondary cores. */
/memreserve/ 0x00000000 0x0001000;
#include "socfpga.dtsi"

/ {
	soc {
		clkmgr@ffd04000 {
			clocks {
				osc1 {
					clock-frequency = <25000000>;
				};

				eth_tse_dma_0_clk_0: eth_tse_dma_0_clk_0 {
					compatible = "fixed-clock";
					#clock-cells = <0>;
					clock-frequency = <50000000>;	/* 50.00 MHz */
					clock-output-names = "eth_tse_dma_0_clk_0-clk";
				}; //end eth_tse_dma_0_clk_0 (eth_tse_dma_0_clk_0)

				eth_tse_dma_1_clk_0: eth_tse_dma_1_clk_0 {
					compatible = "fixed-clock";
					#clock-cells = <0>;
					clock-frequency = <50000000>;	/* 50.00 MHz */
					clock-output-names = "eth_tse_dma_1_clk_0-clk";
				}; //end eth_tse_dma_1_clk_0 (eth_tse_dma_1_clk_0)

				eth_tse_dma_2_clk_0: eth_tse_dma_2_clk_0 {
					compatible = "fixed-clock";
					#clock-cells = <0>;
					clock-frequency = <50000000>;	/* 50.00 MHz */
					clock-output-names = "eth_tse_dma_2_clk_0-clk";
				}; //end eth_tse_dma_2_clk_0 (eth_tse_dma_2_clk_0)

				eth_tse_dma_3_clk_0: eth_tse_dma_3_clk_0 {
					compatible = "fixed-clock";
					#clock-cells = <0>;
					clock-frequency = <50000000>;	/* 50.00 MHz */
					clock-output-names = "eth_tse_dma_3_clk_0-clk";
				}; //end eth_tse_dma_3_clk_0 (eth_tse_dma_3_clk_0)
			};
		};

		emmc: dwmmc0@ff704000 {
			num-slots = <1>;
			broken-cd;
			bus-width = <8>;
			cap-mmc-highspeed;
			cap-sd-highspeed;
		};

		sysmgr@ffd08000 {
			cpu1-start-addr = <0xffd080c4>;
		};
	};
};

&watchdog0 {
	status = "okay";
};


/ {
	model = "Exor uS05 4 Gigabit MAC Evk";
	compatible = "altr,socfpga-cyclone5", "altr,socfpga";

	chosen {
		bootargs = "console=ttyS0,57600 hw_dispid=45";
	};

	memory {
		name = "memory";
		device_type = "memory";
		reg = <0x0 0x40000000>; /* 1GB */
	};

	aliases {
		mmc0 = &ulti_sdc_0;
		mmc1 = &emmc;
		serial0 = &uart0;
		serial3 = &uart1;
		ethernet0 = &eth_tse_dma_0_eth_tse_0;
		ethernet1 = &eth_tse_dma_1_eth_tse_0;
		ethernet2 = &eth_tse_dma_2_eth_tse_0;
		ethernet3 = &eth_tse_dma_3_eth_tse_0;
		spi0 = &spi0;
		spi1 = &spi1;
	};

	regulator_3_3v: 3-3-v-regulator {
		compatible = "regulator-fixed";
		regulator-name = "3.3V";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	ulti_sdc_0: ulti_sdc@0xFF230000 {
		compatible = "EXOR,ulti_sdc-13.1", "EXOR,ulti_sdc-1.0", "exor,ulti_sdc-1.0", "sdhci-ultimmc";
		reg = < 0xFF230000 0x0000ffff >;
		interrupt-parent = <&intc>;
		interrupts = < 0 43 4 >;
	}; //end ulti_sdc@0x100030000 (ulti_sdc_0)

	ultievcfb_0: ultievcfb@0xff200000 {
	  compatible = "exor,ultievcfb";
	  reg = <0xff200000 0x00000fff>;
	  status = "okay";
	};

	agpio0: gpio@0xff210010 {
		compatible = "altr,pio-1.0";
		reg = <0xff210010 0x10>;
		interrupts = <0 44 4>;
		width=<32>;
		altr,interrupt_type = < 4 >;
		#gpio-cells = <2>;
		gpio-controller;
		#interrupt-cells = <1>;
		interrupt-controller;
	};

	leds {
		compatible = "gpio-leds";
		status = "okay";

		led@1 {
			label = "us02:dl:usr0";
			gpios = <&porta 16 0>;
			default-state = "on";
		};

		led@2 {
			label = "us02:fault:usr0";
			gpios = <&porta 14 0>;
			default-state = "off";
		};
	};

// tse mac start
	sopc0: sopc@0 {
		device_type = "soc";
		ranges;
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "ALTR,avalon", "simple-bus";
		bus-frequency = <0>;

		hps_0_bridges: bridge@0xc0000000 {
			compatible = "altr,bridge-17.1", "simple-bus";
			reg = <0xc0000000 0x20000000>,
				<0xff200000 0x00200000>;
			reg-names = "axi_h2f", "axi_h2f_lw";
			clocks = <&main_pll 0 &main_pll 0 &main_pll 1>;
			clock-names = "h2f_axi_clock", "h2f_lw_axi_clock", "f2h_sdram0_clock";
			#address-cells = <2>;
			#size-cells = <1>;
			ranges = <0x00000000 0x00000000 0xc0000000 0x00010000>,
				<0x00000001 0x00030000 0xff230000 0x00010000>,
				<0x00000001 0x00020000 0xff220000 0x00000200>,
				<0x00000001 0x00020200 0xff220200 0x00000200>,
				<0x00000001 0x00000000 0xff200000 0x00010000>,
				<0x00000001 0x00010000 0xff210000 0x00000008>,
				<0x00000001 0x00010020 0xff210020 0x00000020>,

				<0x00000001 0x00040000 0xff240000 0x00000400>,
				<0x00000001 0x00046000 0xff246000 0x00000020>,
				<0x00000001 0x00048000 0xff248000 0x00000020>,
				<0x00000001 0x0004a000 0xff24a000 0x00000008>,
				<0x00000001 0x00044000 0xff244000 0x00000020>,
				<0x00000001 0x00044200 0xff244200 0x00000020>,

				<0x00000001 0x00050000 0xff250000 0x00000400>,
				<0x00000001 0x00056000 0xff256000 0x00000020>,
				<0x00000001 0x00058000 0xff258000 0x00000020>,
				<0x00000001 0x0005a000 0xff25a000 0x00000008>,
				<0x00000001 0x00054000 0xff254000 0x00000020>,
				<0x00000001 0x00054200 0xff254200 0x00000020>,

				<0x00000001 0x00060000 0xff260000 0x00000400>,
				<0x00000001 0x00066000 0xff266000 0x00000020>,
				<0x00000001 0x00068000 0xff268000 0x00000020>,
				<0x00000001 0x0006a000 0xff26a000 0x00000008>,
				<0x00000001 0x00064000 0xff264000 0x00000020>,
				<0x00000001 0x00064200 0xff264200 0x00000020>,

				<0x00000001 0x00070000 0xff270000 0x00000400>,
				<0x00000001 0x00076000 0xff276000 0x00000020>,
				<0x00000001 0x00078000 0xff278000 0x00000020>,
				<0x00000001 0x0007a000 0xff27a000 0x00000008>,
				<0x00000001 0x00074000 0xff274000 0x00000020>,
				<0x00000001 0x00074200 0xff274200 0x00000020>,

				<0x00000001 0x00010010 0xff210010 0x00000010>;

			eth_tse_dma_0_eth_tse_0: ethernet@0x100040000 {
				compatible = "altr,tse-msgdma-17.1", "altr,tse-msgdma-1.0", "altr,tse-1.0";
				reg = <0x00000001 0x00040000 0x00000400>,
					<0x00000001 0x00046000 0x00000020>,
					<0x00000001 0x00048000 0x00000020>,
					<0x00000001 0x0004a000 0x00000008>,
					<0x00000001 0x00044000 0x00000020>,
					<0x00000001 0x00044200 0x00000020>;
				reg-names = "control_port", "rx_csr", "rx_desc", "rx_resp", "tx_csr", "tx_desc";
				interrupt-parent = <&intc>;
				interrupts = <0 45 4 0 42 4>;
				interrupt-names = "rx_irq", "tx_irq";
				clocks = <&main_pll 0 &eth_tse_dma_0_clk_0 &eth_tse_dma_0_clk_0 &eth_tse_dma_0_clk_0>;
				clock-names = "control_port_clock_connection", "pcs_mac_tx_clock_connection", "receive_clock_connection", "transmit_clock_connection";
				ALTR,rx-fifo-depth = <2048>;	/* embeddedsw.dts.params.ALTR,rx-fifo-depth type NUMBER */
				ALTR,tx-fifo-depth = <2048>;	/* embeddedsw.dts.params.ALTR,tx-fifo-depth type NUMBER */
				rx-fifo-depth = <8192>;	/* embeddedsw.dts.params.rx-fifo-depth type NUMBER */
				tx-fifo-depth = <8192>;	/* embeddedsw.dts.params.tx-fifo-depth type NUMBER */
				address-bits = <48>;
				max-frame-size = <1518>;
				mac-address = [00 00 00 00 00 00];
				altr,has-supplementary-unicast;
				altr,enable-sup-addr = <1>;
				altr,has-hash-multicast-filter;
				altr,enable-hash = <1>;
				phy-connection-type = "rgmii-rxid";
				phy-handle = <&phy_1>;

				eth_tse_dma_0_eth_tse_0_mdio: mdio {
					compatible = "altr,tse-mdio";
					#address-cells = <1>;
					#size-cells = <0>;

					phy_1: ethernet-phy@1 {
							//compatible = "ethernet-phy-id2000.a231", "ethernet-phy-ieee802.3-c22";
							reg = <1>;
							device_type = "ethernet-phy";
							phy-addr = <0x1>;
							ti,fifo-depth = <1>;	// ti dp83867 driver expects this
							ti,rx-internal-delay = <4>;	// 1 ns
						}; //end ethernet-phy@0 (phy_1)
					phy_2: ethernet-phy@2 {
							reg = <2>;
							device_type = "ethernet-phy";
							phy-addr = <0x2>;
							ti,fifo-depth = <1>;	// ti dp83867 driver expects this
							ti,rx-internal-delay = <4>;	// 1 ns
						}; //end ethernet-phy@2 (phy_2)
					phy_3: ethernet-phy@3 {
							reg = <3>;
							device_type = "ethernet-phy";
							phy-addr = <0x3>;
							ti,fifo-depth = <1>;	// ti dp83867 driver expects this
							ti,rx-internal-delay = <4>;	// 1 ns
						}; //end ethernet-phy@3 (phy_3)
					phy_4: ethernet-phy@4 {
							reg = <4>;
							device_type = "ethernet-phy";
							phy-addr = <0x4>;
							ti,fifo-depth = <1>;	// ti dp83867 driver expects this
							ti,rx-internal-delay = <4>;	// 1 ns
						}; //end ethernet-phy@4 (phy_4)
				}; //end mdio (eth_tse_dma_0_eth_tse_0_mdio)
			}; //end ethernet@0x100040000 (eth_tse_dma_0_eth_tse_0)

			eth_tse_dma_1_eth_tse_0: ethernet@0x100050000 {
				compatible = "altr,tse-msgdma-17.1", "altr,tse-msgdma-1.0", "altr,tse-1.0";
				reg = <0x00000001 0x00050000 0x00000400>,
					<0x00000001 0x00056000 0x00000020>,
					<0x00000001 0x00058000 0x00000020>,
					<0x00000001 0x0005a000 0x00000008>,
					<0x00000001 0x00054000 0x00000020>,
					<0x00000001 0x00054200 0x00000020>;
				reg-names = "control_port", "rx_csr", "rx_desc", "rx_resp", "tx_csr", "tx_desc";
				interrupt-parent = <&intc>;
				interrupts = <0 47 4 0 46 4>;
				interrupt-names = "rx_irq", "tx_irq";
				clocks = <&eth_tse_dma_1_clk_0 &eth_tse_dma_1_clk_0 &eth_tse_dma_1_clk_0>;
				clock-names = "control_port_clock_connection", "receive_clock_connection", "transmit_clock_connection";
				ALTR,rx-fifo-depth = <2048>;	/* embeddedsw.dts.params.ALTR,rx-fifo-depth type NUMBER */
				ALTR,tx-fifo-depth = <2048>;	/* embeddedsw.dts.params.ALTR,tx-fifo-depth type NUMBER */
				rx-fifo-depth = <8192>;	/* embeddedsw.dts.params.rx-fifo-depth type NUMBER */
				tx-fifo-depth = <8192>;	/* embeddedsw.dts.params.tx-fifo-depth type NUMBER */
				address-bits = <48>;
				max-frame-size = <1518>;
				mac-address = [00 00 00 00 00 00];
				altr,has-supplementary-unicast;
				altr,enable-sup-addr = <1>;
				altr,has-hash-multicast-filter;
				altr,enable-hash = <1>;
				phy-connection-type = "rgmii-rxid";
				phy-handle = <&phy_2>;
			}; //end ethernet@0x100050000 (eth_tse_dma_1_eth_tse_0)

			eth_tse_dma_2_eth_tse_0: ethernet@0x100060000 {
				compatible = "altr,tse-msgdma-17.1", "altr,tse-msgdma-1.0", "altr,tse-1.0";
				reg = <0x00000001 0x00060000 0x00000400>,
					<0x00000001 0x00066000 0x00000020>,
					<0x00000001 0x00068000 0x00000020>,
					<0x00000001 0x0006a000 0x00000008>,
					<0x00000001 0x00064000 0x00000020>,
					<0x00000001 0x00064200 0x00000020>;
				reg-names = "control_port", "rx_csr", "rx_desc", "rx_resp", "tx_csr", "tx_desc";
				interrupt-parent = <&intc>;
				interrupts = <0 49 4 0 48 4>;
				interrupt-names = "rx_irq", "tx_irq";
				clocks = <&eth_tse_dma_2_clk_0 &eth_tse_dma_2_clk_0 &eth_tse_dma_2_clk_0>;
				clock-names = "control_port_clock_connection", "receive_clock_connection", "transmit_clock_connection";
				ALTR,rx-fifo-depth = <2048>;	/* embeddedsw.dts.params.ALTR,rx-fifo-depth type NUMBER */
				ALTR,tx-fifo-depth = <2048>;	/* embeddedsw.dts.params.ALTR,tx-fifo-depth type NUMBER */
				rx-fifo-depth = <8192>;	/* embeddedsw.dts.params.rx-fifo-depth type NUMBER */
				tx-fifo-depth = <8192>;	/* embeddedsw.dts.params.tx-fifo-depth type NUMBER */
				address-bits = <48>;
				max-frame-size = <1518>;
				mac-address = [00 00 00 00 00 00];
				altr,has-supplementary-unicast;
				altr,enable-sup-addr = <1>;
				altr,has-hash-multicast-filter;
				altr,enable-hash = <1>;
				phy-connection-type = "rgmii-rxid";
				phy-handle = <&phy_3>;
			}; //end ethernet@0x100060000 (eth_tse_dma_2_eth_tse_0)

			eth_tse_dma_3_eth_tse_0: ethernet@0x100070000 {
				compatible = "altr,tse-msgdma-17.1", "altr,tse-msgdma-1.0", "altr,tse-1.0";
				reg = <0x00000001 0x00070000 0x00000400>,
					<0x00000001 0x00076000 0x00000020>,
					<0x00000001 0x00078000 0x00000020>,
					<0x00000001 0x0007a000 0x00000008>,
					<0x00000001 0x00074000 0x00000020>,
					<0x00000001 0x00074200 0x00000020>;
				reg-names = "control_port", "rx_csr", "rx_desc", "rx_resp", "tx_csr", "tx_desc";
				interrupt-parent = <&intc>;
				interrupts = <0 50 4 0 51 4>;
				interrupt-names = "rx_irq", "tx_irq";
				clocks = <&eth_tse_dma_3_clk_0 &eth_tse_dma_3_clk_0 &eth_tse_dma_3_clk_0>;
				clock-names = "control_port_clock_connection", "receive_clock_connection", "transmit_clock_connection";
				ALTR,rx-fifo-depth = <2048>;	/* embeddedsw.dts.params.ALTR,rx-fifo-depth type NUMBER */
				ALTR,tx-fifo-depth = <2048>;	/* embeddedsw.dts.params.ALTR,tx-fifo-depth type NUMBER */
				rx-fifo-depth = <8192>;	/* embeddedsw.dts.params.rx-fifo-depth type NUMBER */
				tx-fifo-depth = <8192>;	/* embeddedsw.dts.params.tx-fifo-depth type NUMBER */
				address-bits = <48>;
				max-frame-size = <1518>;
				mac-address = [00 00 00 00 00 00];
				altr,has-supplementary-unicast;
				altr,enable-sup-addr = <1>;
				altr,has-hash-multicast-filter;
				altr,enable-hash = <1>;
				phy-connection-type = "rgmii-rxid";
				phy-handle = <&phy_4>;
			}; //end ethernet@0x100070000 (eth_tse_dma_3_eth_tse_0)

		};	// end bridge
	};	// end sopc	

	ultibuzz0: ultibuzz@0xff202000 {
		compatible = "exor,ultibuzz";
		reg = <0xff210020 0x20>;
		ref-freq=<25600000>;
		#pwm-cells = <3>;
	};

	beeper {
	  compatible = "pwm-beeper";
	  pwms = <&ultibuzz0 0 50000 0>;
	};
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&gpio2 {
	status = "okay";
};

&i2c0 {
	status = "okay";
	speed-mode = <0>;

	seeprom0:seeprom0@54 {
		compatible = "atmel,24c02";
		reg = <0x54>;
	};

	seeprom1:seeprom1@50 {
		compatible = "atmel,24c02";
		reg = <0x50>;
	};

	seeprom2:seeprom1@56 {
		compatible = "atmel,24c02";
		reg = <0x56>;
	};
	
	m41t83:m41t83@68 {
		compatible = "stm,m41t83";
		reg = <0x68>;
	};
};

&spi0 {
	status = "okay";
	num-cs = <4>;
	bus-num = <0>;
	cs-gpios = <&agpio0 3 0>, <&agpio0 4 0>, <&agpio0 5 0>, <&agpio0 6 0>;

	spidev0: spi0@0 {
		compatible = "spidev";
		reg = <0>;
		spi-max-frequency = <3000000>;
	};

	spidev1: spi0@1 {
		compatible = "spidev";
		reg = <1>;
		spi-max-frequency = <3000000>;
	};

	fram: at25@2 {
		compatible = "atmel,at25", "st,m95256";
		reg = <2>;
		spi-max-frequency = <20000000>;
		pagesize = <64>;
		size = <65536>;
		address-width = <16>;
	};
};

&spi1 {
	status = "okay";
	num-cs = <2>;
	bus-num = <1>;
	cs-gpios = <&agpio0 7 0>, <&agpio0 8 0>;

	spidev2: spi1@0 {
		compatible = "spidev";
		reg = <0>;
		spi-max-frequency = <3000000>;
	};

	spidev3: spi1@1 {
		compatible = "spidev";
		reg = <1>;
		spi-max-frequency = <3000000>;
	};
};

&qspi {
	status = "okay";
	flash0: n25q256a@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "n25q256a";
		reg = <0>;      /* chip select */
		spi-max-frequency = <100000000>;
		m25p,fast-read;
		page-size = <256>; 
		block-size = <16>; /* 2^16, 64KB */
		read-delay = <4>;  /* delay value in read data capture register */
		cdns,tshsl-ns = <50>;
		cdns,tsd2d-ns = <50>;
		cdns,tchsh-ns = <4>;
		cdns,tslch-ns = <4>;

		partition@qspi-fpga1 {
		/* 10MB for raw FPGA1 image. */
		label = "fpga1";
		reg = <0x0 0xa00000>;
		};

		partition@qspi-fpga2 {
		/* 10MB for raw FPGA2 image. */
		label = "fpga2";
		reg = <0xa00000 0xa00000>;
		};
	};
};

&uart0 {
	status = "okay";
	rs485-rts-active-high;
};

&usb1 {
	status = "okay";
};

&can0 {
  status = "okay";
};

&can1 {
  status = "okay";
};

&emmc {
	vmmc-supply = <&regulator_3_3v>;
	vqmmc-supply = <&regulator_3_3v>;

	num-slots = <1>;
	supports-highspeed;
	broken-cd;
	altr,dw-mshc-ciu-div = <3>;
	altr,dw-mshc-sdr-timing = <0 3>;

	slot@0 {
		reg = <0>;
		bus-width = <8>;
	};
};

